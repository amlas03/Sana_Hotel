package sana_hotel.swing;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.AbstractBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;

public class LoginPage extends JFrame implements ActionListener {
    JButton b1;
    JButton b3;
    JLabel l1, l2;
    JPasswordField t2;
    JTextField t1;

    public LoginPage() {
        setTitle("Authentification");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(true);
        setSize(500, 500);

        // Set the content pane with the BackgroundPanel
        BackgroundPanel backgroundPanel = new BackgroundPanel("C:\\INDIA & SD\\S1\\bc-ll.jpg");
        this.add(backgroundPanel);

        ImageIcon imageIcon = new ImageIcon("C:\\INDIA & SD\\S1\\l.jpg");
        this.setIconImage(imageIcon.getImage());

        l1 = new JLabel("Username");
        l1.setFont(new Font("Arial Black", Font.CENTER_BASELINE, 18));
        l1.setForeground(new Color(0x000000));
        t1 = new JTextField();
        t1.setPreferredSize(new Dimension(150, 50));
        t1.setFont(new Font("Consolas", Font.PLAIN, 18));
        t1.setText("username");
        t1.setBorder(new RoundedBorder(15));

        l2 = new JLabel("Password");
        l2.setFont(new Font("Arial Black", Font.CENTER_BASELINE, 18));
        l2.setForeground(new Color(0x000000));
        t2 = new JPasswordField();
        t2.setPreferredSize(new Dimension(150, 50));
        t2.setFont(new Font("Consolas", Font.PLAIN, 18));
        t2.setText("********");
        t2.setBorder(new RoundedBorder(15));

        JPanel p1 = new JPanel();
        
        p1.add(l1);
        p1.add(t1);
        
        p1.setBorder(BorderFactory.createEmptyBorder(10, 0, 10, 0));
        p1.setBackground(new Color(0x0000FF));
        p1.setOpaque(false);
        JPanel p2 = new JPanel();
        
        p2.add(l2);
        p2.add(t2);
        p2.setBackground(new Color(0x0000FF));
        p2.setOpaque(false);
        

        JPanel p = new JPanel(new FlowLayout(FlowLayout.CENTER));
        b1 = new JButton("S'authentifier");

        b3 = new JButton("Quitter");

        // Set button font
        Font buttonFont = new Font("Arial Black", Font.PLAIN, 16);
        b1.setFont(buttonFont);

        b3.setFont(buttonFont);

        // Set rounded borders for buttons
        b1.setBorder(new RoundedBorder(15));

        b3.setBorder(new RoundedBorder(15));

        // Add mouse hover effect to buttons
        addMouseHoverEffect(b1);

        addMouseHoverEffect(b3);

        p.add(b1);

        p.add(b3);
        p.setBackground(new Color(0x0000FF));
        p.setOpaque(false);
        JPanel fp =new JPanel(new GridLayout(3,1));
        
        fp.add(p1);
        fp.add(p2);
        fp.add(p);
        
        fp.setBackground(new Color(0x000FF));
        
        fp.setOpaque(false);
        backgroundPanel.add(fp);
        

        setLocationRelativeTo(null);
        setVisible(true);
        b3.addActionListener(this);
        b1.addActionListener(this);
    }

    private void addMouseHoverEffect(JButton button) {
        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                button.setBackground(button.getBackground().brighter());
            }

            @Override
            public void mouseExited(MouseEvent e) {
                button.setBackground(UIManager.getColor("control"));
            }
        });
    }

    class BackgroundPanel extends JPanel {
        private Image backgroundImage;

        public BackgroundPanel(String imagePath) {
            try {
                backgroundImage = ImageIO.read(new File(imagePath));
            } catch (IOException e) {
                e.printStackTrace();
                System.err.println("Error loading background image: " + e.getMessage());
            }
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            if (backgroundImage != null) {
                g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), this);
            }
        }
    }


    // Custom border class for rounded borders
    private static class RoundedBorder extends AbstractBorder {
        private final int radius;

        public RoundedBorder(int radius) {
            this.radius = radius;
        }

        @Override
        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            super.paintBorder(c, g, x, y, width, height);
            Graphics2D g2d = (Graphics2D) g.create();
            g2d.setColor(Color.BLACK);
            g2d.drawRoundRect(x, y, width - 1, height - 1, radius, radius);
            g2d.dispose();
        }

        @Override
        public Insets getBorderInsets(Component c) {
            return new Insets(radius, radius, radius, radius);
        }

        @Override
        public Insets getBorderInsets(Component c, Insets insets) {
            insets.set(radius, radius, radius, radius);
            return insets;
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new LoginPage());
    }

	@SuppressWarnings("deprecation")
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		if(e.getSource()==b1) {
			char[] s= t2.getPassword();
			char[] s1= {'N','A','D','A'};
			if((t1.getText()=="nadaalaoui") || (t2.getPassword()==s1) ){
				System.out.println("Welcome");}
			else {
				System.out.println("Please check your credentials");}}
		else if (e.getSource()==b3) {
			this.dispose();
		}}}



